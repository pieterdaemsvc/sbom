name: docker_build_container
run-name: docker build üèóÔ∏è
on:
  push:
    paths:
      - example_docker/**
      - .github/workflows/sbom.yml
  workflow_dispatch:
env:
# defines environment variables that are available to all jobs in the workflow
  APP_IMAGE: ghcr.io/${{ github.repository }}/example-docker
  APP_COMMIT_SHA: "${{ github.event.pull_request.head.sha || github.sha }}"
jobs:
  container:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Require write permission to Fetch an federated identity token.
      contents: read # Require read permission to access the repository contents.
      packages: write # Require write permission to publish docker image to package.
      attestations: write # Require write permission to publish attestation to package.
    steps:
        - name: git clone application code
          uses: actions/checkout@v4

        - name: docker login github packages
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: volvo-cars
            password: ${{ secrets.GITHUB_TOKEN}}
        

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
          with:
            cache-binary: true
           
        # - name: Docker meta
        #   id: meta
        #   uses: docker/metadata-action@v5.6.1
        #   with:
        #     # list of Docker images to use as base name for tags
        #     images: |
        #         ${{ env.APP_IMAGE}}
        #     # generate Docker tags based on the following events/attributes
        #     tags: |
        #         type=raw,value=${{ github.sha }}
        #         type=raw,value=latest
        #   env:
        #     DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest
        - name: Build and push
          id: docker_build
          uses: docker/build-push-action@v6
          with:
            platforms: linux/amd64
            context: ./example_docker
            file: ./example_docker/Dockerfile
            push: true
            load: false
            tags: ${{ env.APP_IMAGE}}:latest
            cache-from: type=gha,mode=max,timeout=${{ env.CACHE_TIMEOUT}}
            cache-to: type=gha,mode=max,ignore-error=true,timeout=${{ env.CACHE_TIMEOUT}}
            provenance: mode=max
            sbom: false
          env: #https://github.com/marketplace/actions/build-and-push-docker-images#environment-variables
            DOCKER_BUILD_CHECKS_ANNOTATIONS: "true"
            DOCKER_BUILD_SUMMARY: "true"
            DOCKER_BUILD_RECORD_UPLOAD: "true"
            CACHE_TIMEOUT: 10m
        
        - uses: anchore/sbom-action@v0
          with:
            image: "${{ env.APP_IMAGE}}@${{ steps.docker_build.outputs.digest }}"
            artifact-name: sbom.spdx
            output-file: ./sbom.spdx
        - name: Generate SBOM attestation
          uses: actions/attest-sbom@v1
          with:
            subject-name: ${{ env.APP_IMAGE}}
            subject-digest: ${{ steps.docker_build.outputs.digest }}
            sbom-path: ./sbom.spdx
            push-to-registry: true
        - uses: anchore/sbom-action/publish-sbom@v0
          with:
              sbom-artifact-match: ".*\\.spdx$"